/*
* Thumpcord build file.
* Portions from Thump's build file.
*/

//================================================
// Pre-execute

buildscript {
    repositories {
        jcenter()
        maven {
            name = "Forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = 'Kotlin 1.1 EAP'
            url = 'http://dl.bintray.com/kotlin/kotlin-eap-1.1'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VER"
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

repositories {
    maven {
        name 'Forge'
        url 'http://files.minecraftforge.net/maven'
    }
    mavenCentral()
    maven {
        name 'Hopper (carrot)'
        url 'https://maven.hopper.bunnies.io/'
    }
    maven {
        name = 'Kotlin 1.1 EAP'
        url = 'http://dl.bintray.com/kotlin/kotlin-eap-1.1'
    }
    // Needed to workaround a dependency in Warren/Kale
    maven {
        name = 'Kotlin DEV'
        url = 'https://dl.bintray.com/kotlin/kotlin-dev'
    }
    // Discord4j
    jcenter()
    maven {
        name = 'Jitpack'
        url = 'https://jitpack.io'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    shade "org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VER"
    shade "com.github.austinv11:Discord4j:$D4J_VER"
    deobfCompile "chat.willow.thump:Thump:$MC_VER-$THUMP_VER"
}

minecraft {
    version = "$MC_VER-$FORGE_VER"
    mappings = MAPPINGS_VER
    runDir = 'run'
    replace '@VERSION@', MOD_VER
    replace '@KOTLIN@', KOTLIN_VER
}

shadowJar {
    classifier = null
    configurations = [project.configurations.shade]

    dependencies {
        exclude(dependency('net.java.dev.jna:jna:.*'))
        exclude(dependency('net.java.dev.jna:platform:.*'))
        exclude(dependency('org.apache.logging.log4j:.*:.*'))
    }

    exclude '/opus/'

    def REPACK_PACKAGE = 'chat.willow.thumpcord.repack'

    relocate 'kotlin', "${REPACK_PACKAGE}.kotlin"
    relocate 'com.google.gson', "${REPACK_PACKAGE}.gson"
    relocate 'com.jcraft', "${REPACK_PACKAGE}.jcraft"
    relocate 'javazoom', "${REPACK_PACKAGE}.javazoom"
    relocate 'junit', "${REPACK_PACKAGE}.junit"
    relocate 'net.jodah', "${REPACK_PACKAGE}.jodah"
    relocate 'org.eclipse', "${REPACK_PACKAGE}.eclipse"
    relocate 'org.intellij', "${REPACK_PACKAGE}.intellij"
    relocate 'org.jetbrains', "${REPACK_PACKAGE}.jetbrains"
    relocate 'org.kc7bfi', "${REPACK_PACKAGE}.kc7bfi"
    relocate 'org.peergos', "${REPACK_PACKAGE}.peergos"
    relocate 'org.slf4j', "${REPACK_PACKAGE}.slf4j"
    relocate 'org.tritonus', "${REPACK_PACKAGE}.tritonus"
    relocate 'org.apache.http', "${REPACK_PACKAGE}.apache.http"
    relocate 'org.apache.commons.codec', "${REPACK_PACKAGE}.apache.commons.codec"
    relocate 'org.apache.commons.io', "${REPACK_PACKAGE}.apache.commons.io"
    relocate 'org.apache.commons.lang3', "${REPACK_PACKAGE}.apache.commons.lang3"
    relocate 'org.apache.commons.logging', "${REPACK_PACKAGE}.apache.commons.logging"
    relocate 'sx.blah.discord', "${REPACK_PACKAGE}.discord"
}

// Dirty hack to replace 'jar' with 'shadowJar'
jar.deleteAllActions().dependsOn shadowJar

//================================================
// Jar data

// Grab system env
def env = System.getenv()

def buildNumberAddition = project.hasProperty("BUILD_NUMBER") ? ".${project.property("BUILD_NUMBER")}" : ""

version = MC_VER + "-" + MOD_VER + buildNumberAddition
group = "chat.willow.thump"
project.setProperty("archivesBaseName", "Thumpcord")

//================================================
// Jar tasks

// Disable Javadoc doclint on JVM 1.8
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

// Borrowed from https://github.com/McJty/RFTools/blob/1.10/build.gradle
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact deobfJar

            artifact shadowJar {
                classifier ""
            }

            artifact sourceJar
        }
    }
}

